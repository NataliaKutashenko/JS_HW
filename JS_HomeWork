let result2 = null + 3; // null конвертується в нуль, бо коли використовується +, він конвертує операнди в числа
console.log(result2); // Виведе: 3 (0+3)

let result1 = 'number' + 3 + 3; // перетворює число 3 на стрінгу ("number" +3='number3' and "number3"+3 = "number 33")
console.log(result1); // Виведе: number33

let result3 = 5 && "qwerty"; // число 5 є true,тому && буде перевіряти 2ий операнд
console.log(result3); // Виведе: qwerty

let result4 = +'40' + +'2' + "hillel"; // оператор + перетворює стрінгу у намбер, тому 40+2=42, далі оператор + між 42 і стрінгою конкатенує число 42 в стрінгу
console.log (result4); // Виведе: 42hillel 

let result5 = '10' - 5 === 6; // оператор - переводить операнд зі стрінгового значення у намбер, тому 10-5=5, а 5 не дорівнює 6, тому false
console.log (result5); //Виведе: false

let result6 = true + false; //  true - 1, false - 0, 1+0=1
console.log (result6); // Виведе: 1

let result7 = '4px' - 3; // оператор - переводить операнд зі стрінгового значення у намбер, тому 4рх-3 = NaN, бо 4рх не може бути коректно перетворене на число
console.log (result7); // Виведе: NaN

let result8 = '4' - 3; // оператор - переводить операнд зі стрінгового значення у намбер, тому 4-3=1
console.log (result8); // Виведе: 1

let result9 = '6' + 3 ** 0; // будь-яке число, піднесене до 0 ступені дає 1, тому 3 ** 0 = 1, далі оператор + перетворює 1 на стрінгу, оскільки операнд 6 є стрінгою, далі відбувається конкатенація "6" і "1"
console.log (result9); // Виведе: 61

let result10 = 12 / '6'; // оператор / переведе стрінгове значення у намбер, тому 12/6=2
console.log (result10); // Виведе: 2

let result11 = '10' + (5 === 6); // спочатку виконуємо строге порівняння у дужках, де 5 не рівняється 6, отже false. Тепер бульове значення переводиться у стрінгу і конкатенується з 10, виходить 10false
console.log (result11); //  Виведе: 10false

let result12 = null == ''; //  у нестрогому порівнянні порівнюються налл і порожня стрінга, налл не може бути перетвореним на стрінгу. При порівнянні з порожнім рядком, null вважається рівним лише undefined, але не порожньому рядку
console.log (result12); // Виведе: false

let result13 = 3 ** (9 / 3); // спочатку виконуємо дію в дужках: 9/3 = 3, а 3 у 3 ступені = 27 (3*3*3)
console.log (result13); // Виведе: 27

let result14 = !!'false' == !!'true'; //  оскільки стрінга не пуста (не налл, не андейфайнд) то вона має по дефолту значення true, false = true, ! =false, !!= true; true=true, !=false, !!=true; true==true;
console.log (result14); //  Виведе: true

let result15 = 0 || '0' && 1; // оператор && має вищий приорітет, тому виконуємо першим: "0" && 1,оскільки стрінга не пуста, вона є true, і 1 - є true, разом вони дають true,бо && повертає true, якщо обидва операнти є true. Далі порівнюємо  0 || '0', 0 - false, "0"- true, оператор || повертає true, якщо хоча б один з операндів є true, а true =1
console.log (result15); // Виведе: 1

let result16 = (+null == false) < 1; // null перетворюється на 0 з оператором +, 0= false. false==false. 
console.log (result16); // Виведе: false

let result17 = false && true || true; // спочатку вирішуємо &&, тут один операнд false, тому false. Далі вирішуємо false||true, де || повертає true, якщо хоча б один опёранд true, тому true
console.log (result17); // Виведе: true

let result18 = false && (false || true); // спочатку вирішуємо в дужках, оператор || дає true, якщо хоча б один операнд є true, далі false && true, де оператор && дає  false, якщо обидва операнти не є true, тому false
console.log (result18); // Виведе: false

let result19 = (+null == false) < 1 ** 5; // оператор + перетворює null на число, тобто 0, а отже false, false==false, дає true. Далі, 1 у 5 ступені дає 1. Порівнюємо 1<1, що є хибою, тобто false
console.log (result19); // Виведе: false